openapi: 3.0.0
info:
  description: Product API Designed By IDEALO
  version: "0.0.1.RELEASE"
  title: Product API
  contact:
    email: aqibbutt3078@gmail.com
paths:
  /product/add:
    post:
      tags:
        - Product Requests
      summary: Call for inserting a new product.
      operationId: addProduct
      description: API for support to add a new product.
      responses:
        '200':
          description: Item inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddProductResponse'
        '400':
          description: Invalid insert, Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '407':
          description: duplicate product, Cannot insert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '417':
          description: Expectation given in the request's Expect header could not be met.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddProductRequest'
  /product/all:
    get:
      tags:
        - Product Requests
      summary: Call for getting all active products.
      operationId: getAll
      description: API for support to get all products.
      responses:
        '200':
          description: Items retrived successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllProductResponse'
        '404':
          description: 404 Error, Page Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '417':
          description: Expectation given in the request's Expect header could not be met.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    post:
      tags:
        - Product Requests
      summary: Call for getting all active products by SKU.
      operationId: getAllBySku
      description: API for support to get all products by SKU.
      responses:
        '200':
          description: Items retrived successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProductBySkuResponse'
        '404':
          description: 404 Error, Page Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutRequest'

  /product/drop:
    post:
      tags:
        - Product Requests
      summary: Call for droping all provided products.
      operationId: dropAll
      description: API for support to drop all provided products.
      responses:
        '200':
          description: Items droped successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropProductsResponse'
        '404':
          description: 404 Error, Page Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '417':
          description: Expectation given in the request's Expect header could not be met.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropProductsRequest'

components:
  schemas:
    DropProductsRequest:
      type: object
      properties:
        skuList:
          type: array
          items:
            type: string
    DropProductsResponse:
      type: object
      properties:
        detailMessage:
          type: string
    GetAllProductResponse:
      type: object
      properties:
        productDetailResponseList:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailResponse'
    GetProductBySkuResponse:
      type: object
      properties:
        productShortResponseList:
          type: array
          items:
            $ref: '#/components/schemas/ProductShortResponse'
    AddProductResponse:
      properties:
        sku:
          type: string
        productId:
          type: string
        productName:
          type: string
        detailMessage:
          type: string
    AddProductRequest:
      required:
        - sku
        - productId
        - productName
        - unitPrice
        - quantity
      type: object
      properties:
        sku:
          type: string
        productId:
          type: string
        productName:
          type: string
        madeIn:
          type: string
        brand:
          type: string
        unitPrice:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        supplierName:
          type: string
        isActive:
          type: boolean
    ProductShortResponse:
      type: object
      properties:
        sku:
          type: string
        productId:
          type: string
        quantity:
          type: integer
          format: int64
        unitPrice:
          type: integer
          format: int64
        shipping:
          type: integer
          format: int64
        detailedMessage:
          type: string
    ProductDetailResponse:
      type: object
      properties:
        sku:
          type: string
        productId:
          type: string
        productName:
          type: string
        madeIn:
          type: string
        brand:
          type: string
        unitPrice:
          type: integer
          format: int64
        shipping:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int64
        supplierName:
          type: string
        isActive:
          type: boolean
    ResponseError:
      type: object
      properties:
        errorCode:
          type: integer
        errorMessage:
          type: string
        detailedMessage:
          type: string
        exceptionName:
          type: string
        createdAt:
          type: string
    CheckoutRequest:
      type: object
      properties:
        checkoutInfo:
          type: array
          items:
            $ref: '#/components/schemas/CheckoutInfo'
    CheckoutInfo:
      type: object
      properties:
        sku:
          type: string
        checkoutQuantity:
          type: integer
          format: int64